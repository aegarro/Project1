Functions left in functions:

    1.createBlacksmith():
    2.createMinderFull():
    3.createMinerNotFull():
    4.createObstacle():
    5.createOre():
    6.createOreBlob():
    7.createQuake():
    8.createVein():

#1-8 were left in functions because these create a class.
They do not take a class as a parameter since they are creating the class.


    parseBackground():
    parseMiner():
    parseObstacle():
    parseSmith():
    parseVein():
    parsevein():

Each take a string, a WorldModel and an ImageStore.
The 6 functions above moved to World Model, yet could also be put into ImageStore.
The WorldModel and ImageStore are soley passed in so another function can be called,
so it could of also have been left in functions.

Helper functions such as Clamp(), setAlpha(), load(), processLine(), createDefaultBackground(), createImageColored() LoadWorld(), were made private
and were placed in the class where the function is called.

getCurrentImage(Object entity) was left in functions because it does not take a class as a parameter,
and it is called in both WorldModel and WorldView.

scheduleActions(): could be in class Entity or EventScheduler.
I placed this in Entity due to the amount of times the Entity is called.


MoveToFull and MoveToNotFull() could be placed in either WorldModel or Entity, but I placed the function
in Entity since the Entity is what is being moved.

MoveEntity() could be placed in either Entity or WorldModel. I placed it into WorldModel because it removes the
entity at that position which the WorldModel specifies.